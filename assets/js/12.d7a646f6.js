(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{306:function(t,a,s){"use strict";s.r(a);var e=s(46),n=Object(e.a)({},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"setup"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#setup","aria-hidden":"true"}},[t._v("#")]),t._v(" Setup")]),t._v(" "),s("p",[t._v("Generally you want to provide your bots with some base configuration and register some listeners and commands when it starts. This is what the "),s("code",[t._v("register")]),t._v(" method is for, which receives a "),s("code",[t._v("BotCustomizer")]),t._v(" as its only parameter.")]),t._v(" "),s("h2",{attrs:{id:"events"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#events","aria-hidden":"true"}},[t._v("#")]),t._v(" Events")]),t._v(" "),s("h3",{attrs:{id:"commands"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#commands","aria-hidden":"true"}},[t._v("#")]),t._v(" Commands")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("register")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("bot"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    bot"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("command")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'compliment'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("writeCompliment"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("To register a command, call the "),s("code",[t._v(".command(name)")]),t._v(" method on the "),s("code",[t._v("BotCustomizer")]),t._v(". This will return a "),s("code",[t._v("CommandCustomizer")]),t._v(" object,\nwhich you can use to specify your command.")]),t._v(" "),s("h4",{attrs:{id:"handler"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#handler","aria-hidden":"true"}},[t._v("#")]),t._v(" Handler")]),t._v(" "),s("p",[t._v("Like in the example above, "),s("code",[t._v(".call(this.writeCompliment)")]),t._v(" registers the class method "),s("code",[t._v("writeCompliments")]),t._v(" as this command's handler.")]),t._v(" "),s("p",[t._v("When a user calls the command, your handler is called with two arguments:")]),t._v(" "),s("ul",[s("li",[t._v("The "),s("a",{attrs:{href:"https://discord.js.org/#/docs/main/stable/class/Message",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("Message")]),s("OutboundLink")],1),t._v(" that was received")]),t._v(" "),s("li",[t._v("The parsed list of arguments provided by the user")])]),t._v(" "),s("div",{staticClass:"tip custom-block"},[s("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),s("p",[t._v("There is no need to bind the context of your command handlers via "),s("code",[t._v(".bind(this)")]),t._v(". This is automatically done for you by the runtime. However, this also means that you can't bind the context to something else.")])]),t._v(" "),s("h4",{attrs:{id:"aliases"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#aliases","aria-hidden":"true"}},[t._v("#")]),t._v(" Aliases")]),t._v(" "),s("p",[t._v("You can specify an infinite number of aliases with "),s("code",[t._v(".alias(name)")]),t._v(" or "),s("code",[t._v(".synonym(name)")]),t._v(". If a different command already uses this alias, an exception is thrown.")]),t._v(" "),s("h4",{attrs:{id:"arguments"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#arguments","aria-hidden":"true"}},[t._v("#")]),t._v(" Arguments")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("register")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("bot"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    bot"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("command")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hello'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("required")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'foo'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("optional")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'bar'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("optional")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'baz'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'name'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("optional")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'boo'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("message"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" message"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("author"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("remaining")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'others'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("All arguments are positional. The order in which the arguments are parsed when the command is issued is the same that was used to specify them.")]),t._v(" "),s("h5",{attrs:{id:"required-arguments"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#required-arguments","aria-hidden":"true"}},[t._v("#")]),t._v(" Required arguments")]),t._v(" "),s("p",[t._v("Required arguments are needed for the command to be executed correctly. If they are not provided by the issuer the bot will respond with a default error message.")]),t._v(" "),s("p",[t._v("Required arguments always have to come before any optional or the "),s("code",[t._v("remaining")]),t._v(" arguments.")]),t._v(" "),s("h5",{attrs:{id:"optional-arguments"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#optional-arguments","aria-hidden":"true"}},[t._v("#")]),t._v(" Optional arguments")]),t._v(" "),s("p",[t._v("Optional arguments can either have no default ("),s("code",[t._v("null")]),t._v("), a static value ("),s("code",[t._v("name")]),t._v(") or a function that takes the incoming message and returns the default value. In the example argument "),s("code",[t._v("boo")]),t._v(" above, this would be the name of the issuer of the command.")]),t._v(" "),s("h5",{attrs:{id:"remaining-variadic-arguments"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#remaining-variadic-arguments","aria-hidden":"true"}},[t._v("#")]),t._v(" Remaining ("),s("code",[t._v("variadic")]),t._v(") arguments")]),t._v(" "),s("p",[t._v("If you need the user to enter a list of things with arbitrary length, you can make use of variadic arguments. After all the previous arguments have been parsed, any remaining ones will be placed in an array for you.")]),t._v(" "),s("p",[t._v("There can only be one of these variadic arguments per command and it has to be specified as the last one.")]),t._v(" "),s("div",{staticClass:"tip custom-block"},[s("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),s("p",[s("code",[t._v(".variadic(name)")]),t._v(" is a synonym to "),s("code",[t._v(".remaining(name)")]),t._v(".")])]),t._v(" "),s("h3",{attrs:{id:"terminal-commands"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#terminal-commands","aria-hidden":"true"}},[t._v("#")]),t._v(" Terminal commands")]),t._v(" "),s("p",[t._v("The bot can respond to commands submitted via the blurple runtime too. The options are the same as for Discord commands, except:")]),t._v(" "),s("ul",[s("li",[t._v("Default values for optional arguments cannot be functions")]),t._v(" "),s("li",[t._v("The message the command handler receives is just a string, not a discord.js message")])]),t._v(" "),s("div",{staticClass:"warning custom-block"},[s("p",{staticClass:"custom-block-title"},[t._v("WARNING")]),t._v(" "),s("p",[t._v("A "),s("router-link",{attrs:{to:"/runtime/usage.html#commands"}},[t._v("handful of commands")]),t._v(" entered via the runtime are parsed directly by the runtime and therefore can't be used as command names.")],1)]),t._v(" "),s("h3",{attrs:{id:"webhooks"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#webhooks","aria-hidden":"true"}},[t._v("#")]),t._v(" Webhooks")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("register")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("bot"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    bot"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("webhook")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/registered'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("welcomeUser"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("Webhooks respond to "),s("code",[t._v("GET")]),t._v(" requests by default. You may also call "),s("code",[t._v(".post()")]),t._v(" on the webhook for it to respond to "),s("code",[t._v("POST")]),t._v(" requests instead.")])])},[],!1,null,null,null);a.default=n.exports}}]);